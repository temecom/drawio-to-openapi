/*
* Autogenerated ts file: {{definition.name}}.ts
* @date: {{date}}
* @source: {{model.source.fileName}}
* @copyright: {{copyright}}
* @uml {{definition.id}}
*/ 
import { getSystemErrorMap } from "util";
import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;

{{#each definition.imports as |import|}}
import { {{import.name}} } from {{import.name}};
{{/each}}

/**
* Class definition for {{definition.name}}
* Note: uses Lombok getter and setter annotations
*/
@Getter
@Setter
@AccessLevel(chained=true)
export class {{definition.name}} {{#if definition.superClass}}extends {{definition.superClass}}{{/if}} {{#if definition.interfaces}}implements {{definition.interfaces}} {{/if}} {

{{#each definition.attributes as |attribute|}}
    /** {{attribute.name}} 
     * @uml {{attribute.id}}
    */
    private {{attribute.name}}: {{attribute.type}};
{{/each}}

{{#each  definition.methods as |method|}}

    /**
     * {{method.name}}
     * 
     * {{#each method.parameters as |parameter|}}
     *  @param {{parameter.name}} {{parameter.type}}
     * {{/each}})
     * @returns {{method.type}} 
     * @uml {{method.id}}
     */
    {{method.name}} ({{#each method.parameters as |parameter|}}{{#if @index}}, {{/if}}{{parameter.type}} {{parameter.name}}{{/each}}): {{method.type}}  {
        {{method.code}}
    }
    {{/each}}
}